{"version":3,"sources":["Components/InputOptions/InputOptions.js","Components/Post/Post.js","Firebase/Firebase.js","Components/Feed/Feed.js","Components/HeaderOption/HeaderOption.js","Components/Header/Header.js","features/userSlice.js","Components/Login/Login.js","Components/Sidebar/Sidebar.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["InputOptions","title","Icon","color","className","style","Post","name","description","message","photoUrl","Avatar","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","type","onClick","preventDefault","add","photUrl","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","HeaderOption","avtar","src","Header","alt","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Login","setName","email","setEmail","password","setPassword","profilePic","setProfilePic","dispatch","useDispatch","placeholder","alert","createUserWithEmailAndPassword","then","userAuth","uid","displayName","phptoURL","catch","err","Sidebar","recentItem","topic","App","useSelector","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sbAYeA,EATM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjC,OACI,sBAAKC,UAAU,eAAf,UACI,cAACF,EAAD,CAAMG,MAAQ,CAAEF,WAChB,6BAAKF,Q,0JCyBFK,EAvBF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,QAAwB,EAAfC,SACxC,OACI,sBAAKN,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAACO,EAAA,EAAD,IACA,sBAAKP,UAAU,aAAf,UACI,6BAAKG,IACL,4BAAIC,UAGZ,qBAAKJ,UAAU,aAAf,SACI,4BAAIK,MAER,sBAAKL,UAAU,gBAAf,UACI,cAAC,EAAD,CAAcF,KAAMU,IAAwBX,MAAM,OAAOE,MAAM,SAC/D,cAAC,EAAD,CAAcD,KAAMW,IAAkBZ,MAAM,UAAUE,MAAM,SAC5D,cAAC,EAAD,CAAcD,KAAMY,IAAmBb,MAAM,QAAQE,MAAM,SAC3D,cAAC,EAAD,CAAcD,KAAMa,IAAkBd,MAAM,OAAOE,MAAM,gB,iBCZnEa,G,OAFcC,IAASC,cATN,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAKYC,aACjBC,EAAOT,IAASS,OC6DPC,EA/DF,WAAO,IAAD,EAEWC,mBAAS,IAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAGWF,mBAAS,IAHpB,mBAGRG,EAHQ,KAGDC,EAHC,KAKfC,qBAAU,WACNjB,EAAGkB,WAAW,SAASC,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAAQ,OAClEL,EAASK,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAC1B,CACIC,GAAID,EAAIC,GACRC,KAAMF,EAAIE,iBAIxB,IAeF,OACI,sBAAKtC,UAAU,OAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,IACA,iCACI,uBAAOuC,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOH,QAAQI,KAAK,SACnE,wBAAQC,QApBX,SAACH,GACdA,EAAEI,iBAEFjC,EAAGkB,WAAW,SAASgB,IAAI,CACvB3C,KAAM,iBACNC,YAAa,eACbC,QAASoB,EACTsB,QAAS,GACTC,UAAWnC,IAASQ,UAAU4B,WAAWC,oBAE7CxB,EAAS,KAUkCiB,KAAK,SAAhC,wBAGR,sBAAK3C,UAAU,qBAAf,UACI,cAAC,EAAD,CAAcH,MAAM,QAAQC,KAAMqD,IAAWpD,MAAM,aACnD,cAAC,EAAD,CAAcF,MAAM,QAAQC,KAAMsD,IAAmBrD,MAAM,aAC3D,cAAC,EAAD,CAAcF,MAAM,QAAQC,KAAMuD,IAAetD,MAAM,YACvD,cAAC,EAAD,CAAcF,MAAM,gBAAgBC,KAAMwD,IAAqBvD,MAAM,mBAbjF,OAmBQ4B,QAnBR,IAmBQA,OAnBR,EAmBQA,EAAOQ,KAAI,gBAAEE,EAAF,EAAEA,GAAF,IAAMC,KAAOnC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,YAAaC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,SAAzC,OACP,cAAC,EAAD,CAEIH,KAAMA,EACNC,YAAaA,EACbC,QAASA,EACTC,SAAUA,GAJL+B,U,0BC5CdkB,G,OAhBM,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAO1D,EAAiB,EAAjBA,KAAMD,EAAW,EAAXA,MAChC,OACI,sBAAKG,UAAU,eAAf,UAEQF,GACI,cAACA,EAAD,CAAME,UAAU,uBAGpBwD,GACI,cAACjD,EAAA,EAAD,CAAQP,UAAU,sBAAsByD,IAAKD,IAErD,oBAAIxD,UAAU,sBAAd,SAAqCH,S,yFCqBlC6D,EAvBA,WACX,OACI,sBAAK1D,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKyD,IAPA,0DAOmBE,IAAI,KAC5B,sBAAK3D,UAAU,iBAAf,UAEI,cAAC,IAAD,IACA,uBAAO2C,KAAK,eAGpB,sBAAK3C,UAAU,gBAAf,UACI,cAAC,EAAD,CAAcH,MAAM,OAAOC,KAAM8D,MACjC,cAAC,EAAD,CAAc/D,MAAM,aAAaC,KAAM+D,MACvC,cAAC,EAAD,CAAchE,MAAM,OAAOC,KAAMgE,MACjC,cAAC,EAAD,CAAcjE,MAAM,YAAYC,KAAMiE,MACtC,cAAC,EAAD,CAAclE,MAAM,gBAAgBC,KAAMkE,MAC1C,cAAC,EAAD,CAAcR,MAnBhB,8F,QCLDS,EAAYC,YAAY,CACnC/D,KAAM,OACNgE,aANmB,CACnBC,KAAM,MAMNC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,S,EAKcH,EAAUU,QAA5BL,E,EAAAA,MACFM,I,EADSF,OACI,SAACH,GAAD,OAAWA,EAAMH,KAAKA,OACjCH,KAAf,QCyCeY,I,OAtDD,WAAO,IAAD,EAEQrD,mBAAS,IAFjB,mBAETrB,EAFS,KAEH2E,EAFG,OAGUtD,mBAAS,IAHnB,mBAGTuD,EAHS,KAGFC,EAHE,OAIgBxD,mBAAS,IAJzB,mBAITyD,EAJS,KAICC,EAJD,OAKoB1D,mBAAS,IAL7B,mBAKT2D,EALS,KAKGC,EALH,KAMVC,EAAWC,cA+BjB,OACI,sBAAKtF,UAAU,QAAf,UACI,qBAAKyD,IAzCI,+FAyCeE,IAAI,oBAC5B,iCACI,uBAAOpB,MAAOpC,EAAMqC,SAAU,SAAAC,GAAC,OAAEqC,EAAQrC,EAAEC,OAAOH,QAAQI,KAAK,OAAO4C,YAAY,cAClF,uBAAOhD,MAAO4C,EAAY3C,SAAU,SAAAC,GAAC,OAAE2C,EAAc3C,EAAEC,OAAOH,QAAQI,KAAK,OAAO4C,YAAY,oBAC9F,uBAAOhD,MAAOwC,EAAOvC,SAAU,SAAAC,GAAC,OAAEuC,EAASvC,EAAEC,OAAOH,QAAQI,KAAK,QAAQ4C,YAAY,UACrF,uBAAOhD,MAAO0C,EAAUzC,SAAU,SAAAC,GAAC,OAAEyC,EAAYzC,EAAEC,OAAOH,QAAQI,KAAK,WAAW4C,YAAY,aAC9F,wBAAQ5C,KAAK,SAASC,QAZf,SAACH,GAChBA,EAAEI,kBAWM,wBAEJ,8CACI,sBAAM7C,UAAU,iBAAiB4C,QAxC5B,WACb,IAAIzC,EACA,OAAOqF,MAAM,4BAEjBlE,EAAKmE,+BAA+BV,EAAOE,GAC1CS,MAAK,SAAAC,GAOEN,EAASf,EAAM,CACXS,MAAOY,EAASvB,KAAKW,MACrBa,IAAKD,EAASvB,KAAKwB,IACnBC,YAAa1F,EACb2F,SAAUX,QAIrBY,OAAM,SAAAC,GACHR,MAAMQ,EAAI3F,aAmBN,kCCRD4F,I,OA1CC,WAEZ,IAAMC,EAAa,SAACC,GAAD,OACf,sBAAKnG,UAAU,sBAAf,UACI,sBAAMA,UAAU,eAAhB,eAGA,4BAAImG,QAIZ,OACI,sBAAKnG,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKyD,IAhBP,gJAgBmBE,IAAI,KACrB,cAACpD,EAAA,EAAD,CAAQP,UAAU,mBAClB,gDACA,+DAEJ,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,+CACA,mBAAGA,UAAU,uBAAb,uBAEJ,sBAAKA,UAAU,gBAAf,UACI,gDACA,mBAAGA,UAAU,uBAAb,0BAGR,sBAAKA,UAAU,kBAAf,UACI,uCACCkG,EAAW,WACXA,EAAW,QACXA,EAAW,WACXA,EAAW,UACXA,EAAW,WACXA,EAAW,mBCZbE,OArBf,WAEE,IAAMhC,EAAOiC,YAAYzB,IACzB,OACE,sBAAK5E,UAAU,MAAf,UACE,cAAC,EAAD,IAEIoE,EAID,sBAAKpE,UAAU,WAAf,UACG,cAAC,GAAD,IACA,cAAC,EAAD,OALD,cAAC,GAAD,QCdEsG,GAAQC,YAAe,CAClCC,QAAS,CACPpC,KAAMqC,MCOUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJY,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,MAAK,SAAC6B,GAClCA,EAAaC,kB","file":"static/js/main.1bb3cc7e.chunk.js","sourcesContent":["import React from 'react'\nimport './InputOptions.css'\n\nconst InputOptions = ({ title, Icon, color }) => {\n    return (\n        <div className=\"inputOptions\">\n            <Icon style ={{ color }}/>\n            <h4>{title}</h4>\n        </div>\n    )\n}\n\nexport default InputOptions\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport InputOptions from '../InputOptions/InputOptions'\nimport './Post.css'\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\n\nconst Post = ({ name, description, message, photoUrl }) => {\n    return (\n        <div className=\"post\">\n            <div className=\"post__header\">\n                <Avatar/>\n                <div className=\"post__info\">\n                    <h2>{name}</h2>\n                    <p>{description}</p>\n                </div>\n            </div>\n            <div className=\"post__body\">\n                <p>{message}</p>\n            </div>\n            <div className=\"post__buttons\">\n                <InputOptions Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n                <InputOptions Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n                <InputOptions Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n                <InputOptions Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Post\n","import firebase  from 'firebase'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDOERPR96QAB3LmgT_scmFVYZLu_tikoKg\",\n    authDomain: \"linkedin-clone-c2f05.firebaseapp.com\",\n    projectId: \"linkedin-clone-c2f05\",\n    storageBucket: \"linkedin-clone-c2f05.appspot.com\",\n    messagingSenderId: \"795379624161\",\n    appId: \"1:795379624161:web:1a2e57cbc3c50c360dafa0\"\n  };\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth()\n\nexport {db, auth}","import React, { useState } from 'react'\nimport './Feed.css'\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOptions from '../InputOptions/InputOptions';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from '../Post/Post';\nimport { useEffect } from 'react';\nimport { db } from '../../Firebase/Firebase';\nimport firebase from 'firebase'\n\nconst Feed = () => {\n\n    const [input, setInput] = useState(\"\")\n    const [posts, setPosts] = useState([])\n\n    useEffect(()=>{\n        db.collection('posts').orderBy('timestamp','desc').onSnapshot(snapshot => (\n            setPosts(snapshot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data(),\n                }\n            )))\n        ))\n    },[])\n\n    const sendPost = (e) => {\n        e.preventDefault();\n\n        db.collection('posts').add({\n            name: \"Kiran N Chavan\",\n            description: \"This is desc\",\n            message: input,\n            photUrl: '',\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        setInput(\"\")\n    }\n\n    return (\n        <div className=\"feet\">\n            <div className=\"feed__inputContainer\">\n                <div className=\"feed__input\">\n                    <CreateIcon/>\n                    <form>\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\n                        <button onClick={sendPost} type=\"submit\">Send</button>\n                    </form>\n                </div>\n                <div className=\"feet__inputOptions\">\n                    <InputOptions title=\"Photo\" Icon={ImageIcon} color=\"#7085F9 \" />\n                    <InputOptions title=\"Video\" Icon={SubscriptionsIcon} color=\"#E7A33E \" />\n                    <InputOptions title=\"Event\" Icon={EventNoteIcon} color=\"#C0CBCD\" />\n                    <InputOptions title=\"Write Article\" Icon={CalendarViewDayIcon} color=\"#7FC15E \" />\n                </div>\n            </div>\n\n            {/* Posts  */}\n            {\n                posts?.map(({id, data: {name, description, message, photoUrl}}) => (\n                    <Post \n                        key={id}\n                        name={name}\n                        description={description}\n                        message={message}\n                        photoUrl={photoUrl}\n                    /> \n                ))\n            }\n        </div>\n    )\n}\n\nexport default Feed\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport './HeaderOption.css'\n\nconst HeaderOption = ({avtar, Icon, title}) => {\n    return (\n        <div className=\"headerOption\">\n            {\n                Icon &&\n                    <Icon className=\"headerOption__icon\" />\n            }\n            {\n                avtar && \n                    <Avatar className=\"headerOption__avtar\" src={avtar} />\n            }\n            <h3 className=\"headerOption__title\">{title}</h3>\n        </div>\n    )\n}\n\nexport default HeaderOption\n","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport HeaderOption from '../HeaderOption/HeaderOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nconst linkedinIcon = \"https://image.flaticon.com/icons/png/512/174/174857.png\"\nconst avtar = \"https://cdn4.iconfinder.com/data/icons/evil-icons-user-interface/64/avatar-512.png\"\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"header__left\">\n                <img src={linkedinIcon} alt=\"\"/>\n                <div className=\"header__search\">\n                    {/* SearchIcon  */}\n                    <SearchIcon/>\n                    <input type=\"text\" />\n                </div>\n            </div>\n            <div className=\"header__right\">\n                <HeaderOption title=\"Home\" Icon={HomeIcon} />\n                <HeaderOption title=\"My Network\" Icon={SupervisorAccountIcon} />\n                <HeaderOption title=\"Jobs\" Icon={BusinessCenterIcon} />\n                <HeaderOption title=\"Messaging\" Icon={ChatIcon} />\n                <HeaderOption title=\"Notifications\" Icon={NotificationsIcon} />\n                <HeaderOption avtar={avtar} /> \n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload\n    },\n    logout: (state) => {\n      state.user = null\n    }\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\nexport default userSlice.reducer;\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../../features/userSlice'\nimport { auth } from '../../Firebase/Firebase'\nimport './Login.css'\n\nconst linkedInIcon = 'https://carers-network.org.uk/wp-content/uploads/2020/05/Linkedin-Logo-2003%E2%80%932011.png'\n\nconst Login = () => {\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [profilePic, setProfilePic] = useState(\"\")\n    const dispatch = useDispatch()\n\n    const register = () => {\n        if(!name) {\n            return alert(\"Please enter a full name\")\n        }\n        auth.createUserWithEmailAndPassword(email, password)\n        .then(userAuth=> {\n            // userAuth.user\n            // .updateProfile({\n            //     displayName: name,\n            //     photoURL: profilePic\n            // })\n            // .then(()=>{\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    phptoURL: profilePic\n                }))\n            // })\n        })\n        .catch(err=> {\n            alert(err.message)\n        })\n    }\n\n    const logintoApp = (e) => {\n        e.preventDefault()\n    }\n\n    return (\n        <div className='login'>\n            <img src={linkedInIcon} alt=\"llinked is icon\" />\n            <form>\n                <input value={name} onChange={e=>setName(e.target.value)} type=\"text\" placeholder=\"Full Name\" />\n                <input value={profilePic} onChange={e=>setProfilePic(e.target.value)} type=\"text\" placeholder=\"Profile pic URL\" />\n                <input value={email} onChange={e=>setEmail(e.target.value)} type=\"email\" placeholder=\"Email\" />\n                <input value={password} onChange={e=>setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\n                <button type=\"submit\" onClick={logintoApp}>Sign In</button>\n            </form>\n            <p>Not a member? \n                <span className=\"login_register\" onClick={register}>Register Now</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Login","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport './Sidebar.css'\n\nconst image = \"https://images.unsplash.com/photo-1579546929662-711aa81148cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxleHBsb3JlLWZlZWR8Mnx8fGVufDB8fHx8&w=1000&q=80\"\n\nconst Sidebar = () => {\n\n    const recentItem = (topic) => (\n        <div className=\"sidebar__recentItem\">\n            <span className=\"sidebar_hash\">\n                #\n            </span>\n            <p>{topic}</p>\n        </div>\n    )\n    \n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__top\">\n                <img src={image} alt=\"\" />\n                <Avatar className=\"sidebar__avtar\" />\n                <h2>Kiran N Chavan</h2>\n                <h4>kiranchavankc112@gmail.com</h4>\n            </div>\n            <div className=\"sidebar__stats\">\n                <div className=\"sidebar__stat\">\n                    <p>who viewed you</p>\n                    <p className=\"sidebar__stat__count\">324234</p>\n                </div>\n                <div className=\"sidebar__stat\">\n                    <p>viewed on posts</p>\n                    <p className=\"sidebar__stat__count\">324234</p>\n                </div>\n            </div>\n            <div className=\"sidebar__bottom\">\n                <p>Recent</p>\n                {recentItem('reactjs')}\n                {recentItem('java')}\n                {recentItem('angular')}\n                {recentItem('design')}\n                {recentItem('reactjs')}\n                {recentItem('reactjs')}\n            </div>\n        </div>      \n    )\n}\n\nexport default Sidebar","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport './App.css';\nimport Feed from './Components/Feed/Feed';\nimport Header from './Components/Header/Header';\nimport Login from './Components/Login/Login';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport { selectUser } from './features/userSlice';\n\nfunction App() {\n  \n  const user = useSelector(selectUser)\n  return (\n    <div className=\"app\">\n      <Header/>\n      {\n         !user ? (\n           <Login/>\n         )\n         :\n         <div className=\"app_body\">\n            <Sidebar/>\n            <Feed />\n          </div>\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}